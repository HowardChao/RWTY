* using log directory ‘/Users/danwarren/GitHub/RWTY/rwty.Rcheck’
* using R version 3.1.0 (2014-04-10)
* using platform: x86_64-apple-darwin13.1.0 (64-bit)
* using session charset: UTF-8
* checking for file ‘rwty/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘rwty’ version ‘0.1.1’
* checking package namespace information ... OK
* checking package dependencies ... NOTE
Depends: includes the non-default packages:
  ‘ape’ ‘ggplot2’ ‘reshape2’ ‘phangorn’ ‘MASS’ ‘GGally’
Adding so many packages to the search path is excessive and importing
selectively is preferable.
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... NOTE
Found the following hidden files and directories:
  .DS_Store
  R/.DS_Store
  man/.DS_Store
These were most likely included in error. See section ‘Package
structure’ in the ‘Writing R Extensions’ manual.
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘rwty’ can be installed ... WARNING
Found the following significant warnings:
  Warning: package ‘GGally’ was built under R version 3.1.1
  Warning: package ‘GGally’ was built under R version 3.1.1
See ‘/Users/danwarren/GitHub/RWTY/rwty.Rcheck/00install.out’ for details.
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... NOTE
Packages in Depends field not imported from:
  ‘GGally’ ‘MASS’ ‘ape’ ‘ggplot2’ ‘phangorn’ ‘reshape2’
  These packages need to be imported from (in the NAMESPACE file)
  for when this namespace is loaded but not attached.
See the information on DESCRIPTION files in the chapter ‘Creating R
packages’ of the ‘Writing R Extensions’ manual.
* checking S3 generic/method consistency ... WARNING
plot:
  function(x, ...)
plot.cladeprobs:
  function(input.table, numclades)

plot:
  function(x, ...)
plot.cladevar:
  function(input.table, numclades)

plot:
  function(x, ...)
plot.treespace:
  function(points)

See section ‘Generic functions and methods’ of the ‘Writing R
Extensions’ manual.
* checking replacement functions ... OK
* checking foreign function calls ... NOTE
Foreign function call to a different package:
  .Call("prop_part", ..., PACKAGE = "ape")
See the chapter ‘System and foreign language interfaces’ of the
‘Writing R Extensions’ manual.
* checking R code for possible problems ... NOTE
analyze.single: no visible binding for global variable ‘Gen’
analyze.single: no visible binding for global variable ‘LnL’
plot.cladeprobs: no visible binding for global variable ‘Generations’
plot.cladeprobs: no visible binding for global variable
  ‘Posterior.Probability’
plot.cladeprobs: no visible binding for global variable ‘Clade’
plot.cladevar: no visible binding for global variable ‘Generations’
plot.cladevar: no visible binding for global variable
  ‘Variation.in.posterior.probability’
plot.treespace: no visible binding for global variable ‘x’
plot.treespace: no visible binding for global variable ‘y’
plot.treespace: no visible binding for global variable ‘LnL’
plot.treespace: no visible binding for global variable ‘Generation’
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented data sets:
  ‘run1’ ‘run2’
All user-level objects in a package should have documentation entries.
See the chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'analyze.multi'
  ‘...’

Undocumented arguments in documentation object 'analyze.rwty'
  ‘...’

Undocumented arguments in documentation object 'analyze.single'
  ‘...’

Undocumented arguments in documentation object 'continuous.distance'
  ‘two.trees’

Undocumented arguments in documentation object 'cumulative.freq'
  ‘...’

Undocumented arguments in documentation object 'plot.cladeprobs'
  ‘input.table’
Documented arguments not in \usage in documentation object 'plot.cladeprobs':
  ‘x’

Undocumented arguments in documentation object 'slide.freq'
  ‘...’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See the chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... WARNING
  
  Note: significantly better compression could be obtained
        by using R CMD build --resave-data
               old_size new_size compress
  fungus.RData    2.9Mb    2.5Mb       xz
* checking examples ... OK
* checking PDF version of manual ... OK
WARNING: There were 5 warnings.
NOTE: There were 5 notes.
